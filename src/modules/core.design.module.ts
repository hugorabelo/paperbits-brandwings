import { Hinter } from "@paperbits/common/tutorials/hinter";
import { Confirmation } from "@paperbits/core/workshops/confirmation/ko/confirmation";
import { LightboxBindingHandler } from "@paperbits/core/ko/bindingHandlers/bindingHandlers.lightbox";
import { GridBindingHandler } from "@paperbits/core/ko/bindingHandlers/bindingHandlers.grid";
import { DraggablesBindingHandler } from "@paperbits/core/ko/bindingHandlers/bindingHandlers.draggables";
import { CoreModule } from "@paperbits/core/core.module";
import { IInjectorModule, IInjector } from "@paperbits/common/injection";
import { PictureDesignModule } from "@paperbits/core/picture/picture.design.module";
import { YoutubePlayerDesignModule } from "@paperbits/core/youtube-player/youtubePlayer.design.module";
import { ButtonEditorModule } from "@paperbits/core/button/ko/buttonEditor.module";
import { TestimonialsEditorModule } from "@paperbits/core/testimonials/ko/testimonialsEditor.module";
import { ColumnEditorModule } from "@paperbits/core/column/ko/columnEditor.module";
import { SectionEditorModule } from "@paperbits/core/section/ko/sectionEditor.module";
import { RowEditorModule } from "@paperbits/core/row/ko/rowEditor.module";
import { BlockWorkshopModule } from "@paperbits/core/workshops/block/ko/block.module";
import { PageDesignModule } from "@paperbits/core/workshops/page/ko/page.design.module";
import { MediaWorkshopModule } from "@paperbits/core/workshops/media/ko/media.module";
import { NavigationWorkshopModule } from "@paperbits/core/workshops/navigation/ko/navigation.module";
import { SettingsWorkshopModule } from "@paperbits/core/workshops/settings/ko/settings.module";
import { Workshops } from "@paperbits/core/workshops/ko/workshops";
import { TextblockEditorModule } from "@paperbits/core/textblock/ko/textblockEditor.module";
import { DropbucketModule } from "@paperbits/core/workshops/dropbucket/ko/dropbucket.module";
import { ViewportSelector } from "@paperbits/core/workshops/viewports/ko/viewport-selector";
import { LocaleSelector, LocaleEditor } from "@paperbits/core/workshops/localization/ko";
import { HostBindingHandler, BalloonBindingHandler, ResizableBindingHandler, SurfaceBindingHandler, ContextualCommandBindingHandler } from "@paperbits/core/ko/bindingHandlers";
import { MediaHandlers, HtmlEditorProvider } from "@paperbits/common/editing";
import { HyperlinkSelector } from "@paperbits/core/workshops/hyperlinks/ko/hyperlinkSelector";
import { WidgetSelector } from "@paperbits/core/workshops/widgets/ko/widgetSelector";
import { UrlSelector, UrlHyperlinkDetails } from "@paperbits/core/workshops/urls/ko";
import { LayoutDesignModule } from "@paperbits/core/layout/ko/layout.design.module";
import { UrlHyperlinkProvider } from "@paperbits/common/urls/urlHyperlinkProvider";
import { MediaHyperlinkProvider } from "@paperbits/common/media";
import { DragManager } from "@paperbits/common/ui/draggables";
import { UnhandledErrorHandler } from "@paperbits/common/errors";
import { PlaceholderViewModel } from "@paperbits/core/placeholder/ko/placeholderViewModel";
import { DefaultViewManager, Tooltip } from "@paperbits/core/ko/ui";
import { KnockoutValidation } from "@paperbits/core/ko/validation/validators";
import { CropperBindingHandler } from "@paperbits/core/workshops/cropper/cropper";
import { GridEditor } from "@paperbits/core/grid/ko";
import { CardEditorModule } from "@paperbits/core/card/ko/cardEditor.module";
import { MediaPermalinkResolver } from "@paperbits/common/media/mediaPermalinkResolver.design";
import { GridEditorModule } from "@paperbits/core/grid-layout-section/ko/gridEditor.module";
import { GridCellEditorModule } from "@paperbits/core/grid-cell/ko/gridCellEditor.module";
import { Tray } from "@paperbits/core/workshops/tray/tray";
import { CollapsiblePanelEditorModule } from "@paperbits/core/collapsible-panel/ko";
import { MenuEditorModule } from "@paperbits/core/menu/ko";
import { Spinner } from "@paperbits/core/ko";
import { DesignerUserService } from "@paperbits/core/ko/ui/designerUserService";
import { RoleSelector, RoleInput } from "@paperbits/core/workshops/roles/ko";
import "@paperbits/core/ko/bindingHandlers/bindingHandlers.dialog";
import "@paperbits/core/ko/bindingHandlers/bindingHandlers.activate";
import "@paperbits/core/ko/bindingHandlers/bindingHandlers.whenInView";
import { ContentEditorModule } from "@paperbits/core/content/ko";
import { ViewStack } from "@paperbits/common/ui/viewStack";
import { MediaDisplay } from "@paperbits/core/workshops/media/ko/mediaDisplay";
import { Lightbox } from "@paperbits/core/workshops/media/ko/lightbox";
import { MapDesignModule } from "@paperbits/core/map/map.design.module";
import { MemoryCache } from "@paperbits/common/caching";
import { TableDesignModule } from "@paperbits/core/table/ko";
import { TableCellDesignModule } from "@paperbits/core/table-cell/tableCell.design.module";
import { LocalStorageSettingsProvider } from "@paperbits/common/configuration";
import { PopupDesignModule, PopupHandlers, PopupModelBinder } from "@paperbits/core/popup";
import { Bag } from "@paperbits/common";
import { ComponentBinder } from "@paperbits/common/editing/componentBinder";
import { PopupHostViewModelBinder } from "@paperbits/core/popup/ko/popupHostViewModelBinder";
import { PopupEditor, PopupViewModel, PopupViewModelBinder } from "@paperbits/core/popup/ko";
import { PopupHost } from "@paperbits/core/popup/ko/popupHost";
import { PopupSelector } from "@paperbits/core/workshops/popups/ko";
import { PopupPermalinkResolver, PopupService } from "@paperbits/common/popups";
import { PopupHostModelBinder } from "@paperbits/core/popup/popupHostModelBinder";
import { DismissButtonDesignModule } from "@paperbits/core/dismiss-button/dismissButton.design.module";


export class CoreDesignModule implements IInjectorModule {
    public register(injector: IInjector): void {
        injector.bindModule(new CoreModule());
        injector.bindCollection("styleGroups");
        injector.bindCollection("dropHandlers");
        injector.bindCollectionLazily("workshopSections");
        injector.bindCollection("trayCommands");
        injector.bindCollection("hyperlinkProviders");
        injector.bindInstance<Bag<ComponentBinder>>("componentBinders", {});
        injector.bindSingleton("viewManager", DefaultViewManager);
        injector.bindSingleton("tray", Tray);
        injector.bindSingleton("viewStack", ViewStack);
        injector.bind("mediaDisplay", MediaDisplay);
        injector.bindSingleton("changesCache", MemoryCache);
        injector.bind("mediaHyperlinkProvider", MediaHyperlinkProvider);
        injector.bind("urlHyperlinkProvider", UrlHyperlinkProvider);
        injector.bind("gridEditor", GridEditor);
        injector.bindToCollection("autostart", KnockoutValidation);
        injector.bindToCollection("autostart", ResizableBindingHandler);
        injector.bindToCollection("autostart", CropperBindingHandler);
        injector.bindToCollection("autostart", BalloonBindingHandler);
        injector.bindToCollection("autostart", UnhandledErrorHandler);
        injector.bindToCollection("autostart", SurfaceBindingHandler);
        injector.bindToCollection("autostart", ContextualCommandBindingHandler);
        injector.bind("tooltip", Tooltip);
        injector.bindSingleton("dragManager", DragManager);
        injector.bindSingleton("lightbox", Lightbox);
        injector.bind("placeholderWidget", PlaceholderViewModel);
        injector.bindSingleton("htmlEditorProvider", HtmlEditorProvider);
        injector.bindSingleton("mediaHandler", MediaHandlers);
        injector.bind("workshops", Workshops);
        injector.bind("viewportSelector", ViewportSelector);
        injector.bind("localeSelector", LocaleSelector);
        injector.bind("localeEditor", LocaleEditor);
        injector.bind("hyperlinkSelector", HyperlinkSelector);
        injector.bind("widgetSelector", WidgetSelector);
        injector.bind("urlSelector", UrlSelector);
        injector.bind("urlHyperlinkDetails", UrlHyperlinkDetails);
        injector.bind("confirmation", Confirmation);
        injector.bind("roleSelector", RoleSelector);
        injector.bind("roleInput", RoleInput);
        injector.bind("spinner", Spinner);
        injector.bind("localSettings", LocalStorageSettingsProvider);
        injector.bindModule(new MapDesignModule());
        injector.bindToCollection("permalinkResolvers", MediaPermalinkResolver, "mediaPermalinkResolver");
        injector.bindModule(new TextblockEditorModule());
        injector.bindModule(new PictureDesignModule());
        injector.bindModule(new ButtonEditorModule());
        injector.bindModule(new YoutubePlayerDesignModule());
        injector.bindModule(new TestimonialsEditorModule());
        injector.bindModule(new MenuEditorModule());
        injector.bindModule(new DropbucketModule());
        injector.bindModule(new PageDesignModule());
        injector.bindModule(new MediaWorkshopModule());
        injector.bindModule(new LayoutDesignModule());
        injector.bindModule(new BlockWorkshopModule());
        injector.bindModule(new NavigationWorkshopModule());
        injector.bindModule(new SettingsWorkshopModule());
        injector.bindModule(new ColumnEditorModule());
        injector.bindModule(new RowEditorModule());
        injector.bindModule(new SectionEditorModule());
        injector.bindModule(new GridEditorModule());
        injector.bindModule(new GridCellEditorModule());
        injector.bindModule(new ContentEditorModule());
        injector.bindModule(new CardEditorModule());
        injector.bindModule(new CollapsiblePanelEditorModule());
        injector.bindModule(new TableDesignModule());
        injector.bindModule(new TableCellDesignModule());
        injector.bindModule(new DismissButtonDesignModule());

        injector.bind("popup", PopupViewModel);
        injector.bind("popupHost", PopupHost);
        injector.bind("popupEditor", PopupEditor);
        injector.bind("popupSelector", PopupSelector);
        injector.bindSingleton("popupService", PopupService);
        injector.bindToCollection("modelBinders", PopupHostModelBinder, "popupHostModelBinder");
        injector.bindToCollection("viewModelBinders", PopupViewModelBinder);
        injector.bindToCollection("widgetHandlers", PopupHandlers);
        injector.bindToCollection("permalinkResolvers", PopupPermalinkResolver, "popupPermalinkResolver");
        injector.bindToCollection("modelBinders", PopupModelBinder, "popupModelBinder");
        injector.bindToCollection("viewModelBinders", PopupHostViewModelBinder, "popupHostViewModelBinder");

        injector.bindToCollection("hyperlinkProviders", UrlHyperlinkProvider);
        injector.bindToCollection("autostart", HostBindingHandler);
        injector.bindToCollection("autostart", DraggablesBindingHandler);
        injector.bindToCollection("autostart", GridBindingHandler);
        injector.bindToCollection("autostart", LightboxBindingHandler);
        injector.bindToCollection("autostart", Hinter);
        injector.bindInstance("reservedPermalinks", ["/", "/404", "/500"]);
        injector.resolve("workshopSections");


        const userService = new DesignerUserService();
        injector.bindInstance("userService", userService);
        injector.bindInstance("designerUserService", userService);
    }
}